name: Run newsletter backend pipeline via API

on:
  workflow_dispatch:      # Allows manual triggering from GitHub UI
  schedule:
    - cron: "40 0 * * *"

jobs:
  run-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Get yesterday's date
        id: get-date
        run: echo "yesterday=$(date -d 'yesterday' +%F)" >> "$GITHUB_OUTPUT"

      - name: Generate random state
        id: get-random
        run: echo "rand=$(( RANDOM ))" >> "$GITHUB_OUTPUT"

      - name: Build JSON payload with jq
        id: payload
        run: |
          echo '{}' \
            | jq \
              --arg td "${{ steps.get-date.outputs.yesterday }}" \
              --arg em "Qwen/Qwen3-Embedding-8B" \
              --argjson steps '["fetch_articles","process_articles","generate_umap","initial_cluster","fill_cluster","update_cluster_assignments","assemble_newsletter","format_html","send_newsletter"]' \
              --argjson rand "${{ steps.get-random.outputs.rand }}" \
              '. 
                | .target_date = $td 
                | .dev_mode = false 
                | .embed_model = $em 
                | .enabled_steps = $steps 
                | .clustering_umap_random_state = $rand
              ' > payload.json

      - name: Send pipeline request
        run: |
          curl -X POST "${{ secrets.API_URL }}/pipeline/run" \
            -H "Content-Type: application/json" \
            -H "X-API-KEY: ${{ secrets.API_KEY }}" \
            -d @payload.json
